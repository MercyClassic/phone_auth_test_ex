services:
  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -d postgres' || exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 1s
    networks:
      - main
  api:
    container_name: api
    restart: always
    build:
      context: ./
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - main
    ports:
      - "8000:8000"
  nginx:
    image: nginx
    restart: always
    container_name: nginx
    depends_on:
      - api
    ports:
      - "80:80"
    volumes:
      - ./src/static:/var/app/static/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 1s
    networks:
      - main
networks:
  main:
    driver: bridge
volumes:
  postgres_data:
